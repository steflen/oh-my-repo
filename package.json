{
  "name": "oh-my-repo",
  "version": "0.0.0-development",
  "description": "Oh my (mono) repo",
  "author": "Stefan Lenz <www.stefan.lenz@gmail.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/steflen/oh-my-repo.git"
  },
  "private": true,
  "engines": {
    "node": ">=12",
    "yarn": ">=1.15.2"
  },
  "scripts": {
    "nx": "nx",
    "build": "yarn clean:dist && yarn docs:gen && yarn build:sb",
    "XXXXXXXXXXX HOOKS XXXXXXXXXXXXXXXXXXXXXXXX": "",
    "offpreinstall": "node -e '!process.env.npm_config_user_agent.startsWith(\"yarn/\") &&! console.log(\"ONLY YARN ALLOWED!\") && process.exit(1)'",
    "pre-build": "yarn clean",
    "postinstall": "electron-rebuild install-app-deps",
    "postinstall.electron": "node tools/electron/postinstall",
    "postinstall.web": "node tools/web/postinstall",
    "prepare.electron.desktop": "yarn postinstall.electron && tsc -p apps/electron-desktop/tsconfig.json",
    "XXXXXXXXXXX COMMON XXXXXXXXXXXXXXXXXXXXXXXX": "",
    "update:all": "nx update --all",
    "update:check": "nx update",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "XXXXXXXXXXX CLEANING XXXXXXXXXXXXXXXXXXXXXX": "",
    "clean:nm": "rimraf node_modules",
    "clean:dist": "rimraf dist",
    "clean": "yarn rimraf -- hooks node_modules package-lock.json && npm i",
    "clean:nativescript-mobile": "cd apps/nativescript-mobile && npx rimraf -- hooks node_modules platforms package-lock.json && npm i && npx rimraf -- package-lock.json",
    "XXXXXXXXXXX COMMIT XXXXXXXXXXXXXXXXXXXXXXX": "",
    "repo:commit": "git-cz",
    "commit:init": "commitizen init cz-conventional-changelog --save-dev --save-exact",
    "commit:update": "git update-index --again",
    "XXXXXXXXXXX DOCUMENTATION XXXXXXXXXXXXXXXXX": "Generate documentation",
    "docs:gen": "compodoc -p tsconfig.json -d dist/docs",
    "docs:serve": "compodoc -s -d dist/docs --port 6005",
    "docs:build:serve": "compodoc -p tsconfig.json -d dist/docs -s --port 6005",
    "XXXXXXXXXXX STORYBOOK XXXXXXXXXXXXXXXXXXXXXXX": "",
    "build:sb": "build-storybook --output-dir dist/storybook",
    "dev:storybook": "start-storybook -p 6006",
    "XXXXXXXXXXX TESTING XXXXXXXXXXXXXXXXXXXXXXX": "",
    "coverage": "codecov",
    "test": "yarn postinstall.web && nx test",
    "e2e": "yarn postinstall.web && nx e2e",
    "XXXXXXXXXXX AFFECTED XXXXXXXXXXXXXXXXXXXXXX": "",
    "affected": "nx affected",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "XXXXXXXXXXX FORMATTING XXXXXXXXXXXXXXXXXXX": "",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "format:all": "prettier --write \"**/*.*(json|js|jsx|ts|tsx)\"",
    "format:fix": "pretty-quick --staged",
    "format:test": "prettier --list-different",
    "XXXXXXXXXXX LINTING XXXXXXXXXXXXXXXXXXXXXX": "",
    "lint": "nx workspace-lint && ng lint",
    "lint:check": "tslint-config-prettier-check tslint.json",
    "lint:fix": "prettier-tslint fix apps/**/*.ts && prettier-tslint fix libs/**/*.ts",
    "XXXXXXXXXXX BUILD XXXXXXXXXXXXXXXXXXXXXXXXX": "",
    "build:web-desktop": "yarn postinstall.web && nx build web-desktop",
    "build.electron.desktop": "yarn prepare.electron.desktop && ng build electron-desktop --prod --base-href ./",
    "build.electron.desktop.local": "yarn build.electron.desktop && electron dist/apps/electron-desktop",
    "build.electron.desktop.linux": "yarn build.electron.desktop && cd dist/apps/electron-desktop && npx electron-builder build --linux",
    "build.electron.desktop.windows": "yarn build.electron.desktop && cd dist/apps/electron-desktop && npx electron-builder build --windows",
    "build.electron.desktop.mac": "yarn build.electron.desktop && cd dist/apps/electron-desktop && npx electron-builder build --mac",
    "XXXXXXXXXXX DEVELOPMENT XXXXXXXXXXXXXXXXXXX": "",
    "serve.electron.desktop.target": "nx serve electron-desktop",
    "serve.electron.desktop": "wait-on http-get://localhost:4200/ && electron apps/electron-desktop/src --serve",
    "start.electron.desktop": "yarn prepare.electron.desktop && npm-run-all -p serve.electron.desktop.target serve.electron.desktop",
    "start": "yarn postinstall.web && nx serve web-desktop",
    "start.web.desktop": "yarn postinstall.web && nx serve web-desktop",
    "start.web.browser": "nx serve web-browser",
    "start.nativescript.mobile.ios": "cd apps/nativescript-mobile && tns run ios --emulator",
    "start.nativescript.mobile.android": "cd apps/nativescript-mobile && tns run android --emulator",
    "start.nativescript.mobile.preview": "cd apps/nativescript-mobile && tns preview",
    "XXXXXXXXXXX SCHEMATICS XXXXXXXXXXXXXXXXXXX": "",
    "sch:run": "nx workspace-schematic",
    "sch:add:nx": "nx add --dev @nrwl/angular @nrwl/web @nrwl/nest @nrwl/node @nrwl/cli @nrwl/cypress @nrwl/jest @nrwl/linter @nrwl/schematics",
    "sch:add:ngrx": "nx add @ngrx/schematics --dev && yarn add @ngrx/{store,effects,entity,store-devtools}",
    "sch:add:material": "nx add @angular/material && ng add @angular/cdk",
    "sch:add:ngx-formly": "nx add @ngx-formly/schematics --ui-theme=material",
    "sch:list": "nx workspace-schematic list-schematics",
    "sch:list:ngrx": "schematics --list-schematics @ngrx/schematics",
    "semantic-release": "semantic-release"
  },
  "dependencies": {
    "@angular/animations": "^8.2.0",
    "@angular/common": "^8.2.0",
    "@angular/compiler": "^8.2.0",
    "@angular/core": "^8.2.0",
    "@angular/forms": "^8.2.0",
    "@angular/platform-browser": "^8.2.0",
    "@angular/platform-browser-dynamic": "^8.2.0",
    "@angular/router": "^8.2.0",
    "@ngx-translate/core": "~11.0.0",
    "@ngx-translate/http-loader": "~4.0.0",
    "@oh-my-repo/scss": "file:libs/scss",
    "core-js": "^3.3.2",
    "karma-chrome-launcher": "^3.1.0",
    "karma-jasmine-html-reporter": "^1.5.1",
    "nativescript-angular": "~8.20.0",
    "nativescript-ngx-fonticon": "^4.2.0",
    "nativescript-theme-core": "^1.0.4",
    "reflect-metadata": "^0.1.12",
    "rxjs": "~6.5.3",
    "tns-core-modules": "~6.2.0",
    "zone.js": "~0.10.2"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.803.3",
    "@angular/compiler-cli": "^8.2.0",
    "@angular/language-service": "^8.2.0",
    "@babel/core": "^7.7.7",
    "@nrwl/angular": "~8.8.0",
    "@nrwl/cypress": "8.10.0",
    "@nrwl/jest": "8.10.0",
    "@nrwl/workspace": "8.10.0",
    "@nstudio/angular": "8.1.1",
    "@nstudio/electron": "8.1.1",
    "@nstudio/electron-angular": "8.1.1",
    "@nstudio/nativescript": "8.1.1",
    "@nstudio/nativescript-angular": "8.1.1",
    "@nstudio/web": "8.1.1",
    "@nstudio/web-angular": "8.1.1",
    "@nstudio/xplat": "^8.1.1",
    "@semantic-release/changelog": "^3.0.6",
    "@semantic-release/commit-analyzer": "^7.0.0",
    "@semantic-release/git": "^8.0.0",
    "@semantic-release/github": "^6.0.0",
    "@semantic-release/npm": "^6.0.0",
    "@semantic-release/release-notes-generator": "^7.3.5",
    "@storybook/addon-actions": "^5.2.4",
    "@storybook/addon-backgrounds": "^5.2.4",
    "@storybook/addon-links": "^5.2.4",
    "@storybook/addon-notes": "^5.2.4",
    "@storybook/addon-storysource": "^5.2.4",
    "@storybook/addons": "^5.2.4",
    "@storybook/angular": "^5.2.4",
    "@storybook/cli": "^5.2.4",
    "@types/jest": "24.0.9",
    "@types/node": "~8.9.4",
    "angular-tslint-rules": "^1.20.3",
    "babel-loader": "^8.0.6",
    "codelyzer": "~5.1.0",
    "cypress": "3.6.1",
    "dotenv": "6.2.0",
    "electron": "^18.3.7",
    "electron-builder": "^20.44.4",
    "electron-installer-dmg": "~3.0.0",
    "electron-packager": "~14.1.0",
    "electron-rebuild": "~1.8.6",
    "electron-reload": "~1.5.0",
    "electron-store": "~5.1.0",
    "electron-updater": "~4.2.0",
    "env-cmd": "^10.0.1",
    "eslint": "6.1.0",
    "jest": "24.1.0",
    "jest-preset-angular": "7.0.0",
    "karma-coverage-istanbul-reporter": "^2.1.1",
    "karma-jasmine": "^3.0.3",
    "node-sass": "^4.12.0",
    "npm-run-all": "^4.1.5",
    "prettier": "1.18.2",
    "prettier-tslint": "^0.4.2",
    "semantic-release": "^17.0.0",
    "semantic-release-cli": "^5.2.3",
    "stylelint": "^12.0.1",
    "stylelint-config-standard": "^19.0.0",
    "terser-webpack-plugin": "~2.2.0",
    "tns-platform-declarations": "~6.2.0",
    "ts-jest": "24.0.0",
    "ts-node": "~7.0.0",
    "tslint": "~5.11.0",
    "typescript": "~3.5.3",
    "wait-on": "~3.3.0"
  },
  "optionalDependencies": {
    "@commitlint/cli": "^8.2.0",
    "@commitlint/config-conventional": "^8.2.0",
    "@compodoc/compodoc": "^1.1.11",
    "commitizen": "^4.0.3",
    "cz-conventional-changelog": "^3.0.2",
    "husky": "^3.0.9",
    "lint-staged": "^9.4.2",
    "pretty-quick": "^2.0.0",
    "standard-version": "^7.0.0",
    "tslint-config-prettier": "^1.18.0",
    "webpack-bundle-analyzer": "^3.6.0"
  },
  "xplat": {
    "prefix": "oh-my-repo",
    "framework": "angular"
  },
  "resolutions": {},
  "peerDependenciesMeta": {},
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  }
}
